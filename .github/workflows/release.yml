name: Release

# Only on push or merge on dev branch
on:
  push:
    tags: [ v* ]

jobs:
  # Run jest tests and deploy coverage on heroku
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Install node_modules
      - name: npm install
        run: |
          npm ci

      # Run tests
      - name: run tests
        run: |
          npm run test:coverage

  # Deploy an iOS Beta Release on TestFlight
  deploy_ios_beta:
    needs: run_tests
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
      
      # Install node_modules
      - name: npm install
        run: |
          npm ci
          
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./ios

      - name: Run fastlane build
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          bundle exec fastlane beta
        working-directory: ./ios

  deploy_android_beta:
    needs: run_tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Install node_modules
      - name: npm install
        run: |
          npm ci
          
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      # Build a Ruby cache to reuse
      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      # Build a Gradle cache to reuse
      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

      # Grant necessaries permissions to use ./gradlew
      - name: Grant Permission to Execute
        run: chmod +x gradlew
        working-directory: ./android

      # Install bundle
      - name: Install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./android

      # Configure Android Keystore
      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > fastlane/airwealth.keystore
          echo "storeFile=../fastlane/airwealth.keystore" >> gradle.properties
          echo "keyAlias=$APP_RELEASE_KEY_ALIAS" >> gradle.properties
          echo "storePassword=$APP_RELEASE_KEY_PASSWORD" >> gradle.properties
          echo "keyPassword=$APP_RELEASE_STORE_PASSWORD" >> gradle.properties
        working-directory: ./android
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          APP_RELEASE_KEY_ALIAS: ${{ secrets.APP_RELEASE_KEY_ALIAS }}
          APP_RELEASE_KEY_PASSWORD: ${{ secrets.APP_RELEASE_KEY_PASSWORD }}
          APP_RELEASE_STORE_PASSWORD: ${{ secrets.APP_RELEASE_STORE_PASSWORD }}

      # Build Artifactory to debug easily
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: android-artifact
          path: |
            ./android
            !./android/vendor
      # Launch Fastlane lane to deploy to Play Store
      - name: Distribute app to Beta track ðŸš€
        run: bundle exec fastlane beta
        working-directory: ./android